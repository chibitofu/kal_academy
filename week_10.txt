Trees - Balance
If the height of the tree is + or - one from logn it's balanced.
(ALways take the higher number for logn, ex log10 is 4 not 3)
Keep track of the height in the root.
Everytime you create a node the left and right is -1, and add one to the parent.

How to balance a tree that is un-balanced. Self balancing tree.
If the difference of a left and right node is more than 1, delete and re-add to child node.

B-tree
Indexes Trees
2-3 levels deep
Indexing is bad if you constantly update the table.

Trie tree
Toptal Trie - Website to explain a trie tree.
Only used for strings.
node = data (1 char) has boolean for is word.
child = 26 one for each letter in the alphabet.
root = empty character with 26 children.
use ascii value to figure out where in the array is a letter. ex. 'A' is 65 in ascii 'B' is 66. So to find where B is in the child array of letter, do B - A = 1, index 1.
Often used for auto complete features. They also add weight to show most likely words.

---------

[10,22,9,33,21,50,41,60,80]
longest increasing subsequece.
10,22,33,50,60,80 = 6
dynamic programming
lis[i] = 1
lis[i] = 1 + (lis[j]) if > lis[i]
where 0 < j < i && aa[i] < arr[i]

do a post or pre traversal iteratively